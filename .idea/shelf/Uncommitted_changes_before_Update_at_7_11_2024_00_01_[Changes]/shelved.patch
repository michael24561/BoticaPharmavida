Index: app/src/main/res/anim/slide_out_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/slide_out_right.xml b/app/src/main/res/anim/slide_out_right.xml
new file mode 100644
--- /dev/null	(date 1730955263102)
+++ b/app/src/main/res/anim/slide_out_right.xml	(date 1730955263102)
@@ -0,0 +1,3 @@
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <translate android:fromXDelta="0%" android:toXDelta="100%" android:duration="100"/>
+</set>
Index: app/src/main/res/anim/slide_out_left.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/slide_out_left.xml b/app/src/main/res/anim/slide_out_left.xml
new file mode 100644
--- /dev/null	(date 1730955263101)
+++ b/app/src/main/res/anim/slide_out_left.xml	(date 1730955263101)
@@ -0,0 +1,3 @@
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <translate android:fromXDelta="0%" android:toXDelta="-100%" android:duration="100"/>
+</set>
Index: app/src/main/res/anim/slide_in_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/slide_in_right.xml b/app/src/main/res/anim/slide_in_right.xml
new file mode 100644
--- /dev/null	(date 1730955263101)
+++ b/app/src/main/res/anim/slide_in_right.xml	(date 1730955263101)
@@ -0,0 +1,3 @@
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <translate android:fromXDelta="100%" android:toXDelta="0%" android:duration="100"/>
+</set>
Index: app/src/main/res/anim/slide_in_left.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/slide_in_left.xml b/app/src/main/res/anim/slide_in_left.xml
new file mode 100644
--- /dev/null	(date 1730955263100)
+++ b/app/src/main/res/anim/slide_in_left.xml	(date 1730955263100)
@@ -0,0 +1,3 @@
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <translate android:fromXDelta="-100%" android:toXDelta="0%" android:duration="100"/>
+</set>
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.tecsup.boticaphar\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.tecsup.boticaphar\"\r\n        minSdk = 29\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation (\"androidx.viewpager2:viewpager2:1.0.0\")\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.androidx.activity)\r\n    implementation(libs.androidx.constraintlayout)\r\n    implementation(libs.androidx.swiperefreshlayout)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n\r\n    //Picasso\r\n    implementation (libs.picasso)\r\n    \r\n    //Retrofit\r\n    implementation(libs.retrofit)\r\n    implementation(libs.convertergson)\r\n    implementation(libs.glide)\r\n    implementation(libs.glideCompiler)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 6e6c4f3271d9d180da4d5bde34d6d50ffa90a796)
+++ b/app/build.gradle.kts	(date 1730955263086)
@@ -15,6 +15,8 @@
         versionName = "1.0"
 
         testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
+
+
     }
 
     buildTypes {
@@ -33,12 +35,19 @@
     kotlinOptions {
         jvmTarget = "1.8"
     }
+
+
 }
+
+val room_version = "2.6.1"
 
 dependencies {
-
+    //Fragmentos
     implementation ("androidx.viewpager2:viewpager2:1.0.0")
 
+    //Room
+    implementation("androidx.room:room-runtime:$room_version")
+
     implementation(libs.androidx.core.ktx)
     implementation(libs.androidx.appcompat)
     implementation(libs.material)
Index: app/src/main/java/com/tecsup/boticaphar/PerfilActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tecsup.boticaphar\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.ImageView\r\nimport android.widget.LinearLayout\r\nimport android.widget.TextView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView\r\n\r\nclass PerfilActivity : AppCompatActivity() {\r\n    private lateinit var nameTextView: TextView\r\n    private lateinit var emailTextView: TextView\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_perfil)\r\n\r\n        nameTextView = findViewById(R.id.username)\r\n        emailTextView = findViewById(R.id.et_email)\r\n\r\n        // Cargar datos de SharedPreferences\r\n        val sharedPreferences = getSharedPreferences(\"userPrefs\", Context.MODE_PRIVATE)\r\n        val username = sharedPreferences.getString(\"username\", null)\r\n        val email = sharedPreferences.getString(\"email\", null)\r\n\r\n        val editarPerfil = findViewById<ImageView>(R.id.ic_profile)\r\n        val misPedidos = findViewById<ImageView>(R.id.pedidos)\r\n\r\n        editarPerfil.setOnClickListener {\r\n            val intent = Intent(this, EditarPerfilActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        misPedidos.setOnClickListener {\r\n            val intent = Intent(this, HistorialPedidosActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        // Muestra los detalles en los TextViews\r\n        nameTextView.text = username ?: \"Nombre no disponible\"\r\n        emailTextView.text = email ?: \"Email no disponible\"\r\n\r\n        // Configurar BottomNavigationView\r\n        val bottomNavigationView = findViewById<BottomNavigationView>(R.id.bottom_navigation)\r\n\r\n        // Establecer el ítem del perfil como seleccionado\r\n        bottomNavigationView.selectedItemId = R.id.nav_profile\r\n\r\n        bottomNavigationView.setOnNavigationItemSelectedListener { item ->\r\n            when (item.itemId) {\r\n                R.id.nav_home -> {\r\n                    val intent = Intent(this, HomeActivity::class.java)\r\n                    startActivity(intent)\r\n                    true\r\n                }\r\n                R.id.nav_cart -> {\r\n                    val intent = Intent(this, CarritoActivity::class.java)\r\n                    startActivity(intent)\r\n                    true\r\n                }\r\n                R.id.nav_profile -> true // Mantener en la misma actividad\r\n                else -> false\r\n            }\r\n        }\r\n\r\n        // Manejo del botón de cerrar sesión\r\n        val btnCerrarSesion = findViewById<LinearLayout>(R.id.btn_cerrar_sesion)\r\n        btnCerrarSesion.setOnClickListener {\r\n            cerrarSesion()\r\n        }\r\n    }\r\n\r\n    private fun cerrarSesion() {\r\n        val sharedPreferences = getSharedPreferences(\"userPrefs\", Context.MODE_PRIVATE)\r\n        val editor = sharedPreferences.edit()\r\n        editor.apply()\r\n\r\n        val intent = Intent(this, LoginActivity::class.java)\r\n        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n        startActivity(intent)\r\n        finish()\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tecsup/boticaphar/PerfilActivity.kt b/app/src/main/java/com/tecsup/boticaphar/PerfilActivity.kt
--- a/app/src/main/java/com/tecsup/boticaphar/PerfilActivity.kt	(revision 6e6c4f3271d9d180da4d5bde34d6d50ffa90a796)
+++ b/app/src/main/java/com/tecsup/boticaphar/PerfilActivity.kt	(date 1730955263093)
@@ -3,14 +3,18 @@
 import android.content.Context
 import android.content.Intent
 import android.os.Bundle
-import android.view.View
+import android.view.GestureDetector
+import android.view.MotionEvent
 import android.widget.ImageView
 import android.widget.LinearLayout
 import android.widget.TextView
 import androidx.appcompat.app.AppCompatActivity
+import androidx.core.view.GestureDetectorCompat
 import com.google.android.material.bottomnavigation.BottomNavigationView
 
 class PerfilActivity : AppCompatActivity() {
+
+    private lateinit var gestureDetector: GestureDetectorCompat
     private lateinit var nameTextView: TextView
     private lateinit var emailTextView: TextView
 
@@ -18,10 +22,10 @@
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_perfil)
 
+        gestureDetector = GestureDetectorCompat(this, SwipeGestureListener())
         nameTextView = findViewById(R.id.username)
         emailTextView = findViewById(R.id.et_email)
 
-        // Cargar datos de SharedPreferences
         val sharedPreferences = getSharedPreferences("userPrefs", Context.MODE_PRIVATE)
         val username = sharedPreferences.getString("username", null)
         val email = sharedPreferences.getString("email", null)
@@ -30,53 +34,69 @@
         val misPedidos = findViewById<ImageView>(R.id.pedidos)
 
         editarPerfil.setOnClickListener {
-            val intent = Intent(this, EditarPerfilActivity::class.java)
-            startActivity(intent)
+            startActivity(Intent(this, EditarPerfilActivity::class.java))
         }
 
         misPedidos.setOnClickListener {
-            val intent = Intent(this, HistorialPedidosActivity::class.java)
-            startActivity(intent)
+            startActivity(Intent(this, HistorialPedidosActivity::class.java))
         }
 
-        // Muestra los detalles en los TextViews
         nameTextView.text = username ?: "Nombre no disponible"
         emailTextView.text = email ?: "Email no disponible"
 
-        // Configurar BottomNavigationView
         val bottomNavigationView = findViewById<BottomNavigationView>(R.id.bottom_navigation)
-
-        // Establecer el ítem del perfil como seleccionado
         bottomNavigationView.selectedItemId = R.id.nav_profile
 
         bottomNavigationView.setOnNavigationItemSelectedListener { item ->
             when (item.itemId) {
                 R.id.nav_home -> {
-                    val intent = Intent(this, HomeActivity::class.java)
-                    startActivity(intent)
+                    startActivity(Intent(this, HomeActivity::class.java))
                     true
                 }
                 R.id.nav_cart -> {
-                    val intent = Intent(this, CarritoActivity::class.java)
-                    startActivity(intent)
+                    startActivity(Intent(this, CarritoActivity::class.java))
                     true
                 }
-                R.id.nav_profile -> true // Mantener en la misma actividad
+                R.id.nav_profile -> true
                 else -> false
             }
         }
 
-        // Manejo del botón de cerrar sesión
         val btnCerrarSesion = findViewById<LinearLayout>(R.id.btn_cerrar_sesion)
         btnCerrarSesion.setOnClickListener {
             cerrarSesion()
         }
     }
 
+    override fun onTouchEvent(event: MotionEvent): Boolean {
+        gestureDetector.onTouchEvent(event)
+        return super.onTouchEvent(event)
+    }
+
+    inner class SwipeGestureListener : GestureDetector.SimpleOnGestureListener() {
+        private val SWIPE_THRESHOLD = 100
+
+        override fun onScroll(
+            e1: MotionEvent?,
+            e2: MotionEvent,
+            distanceX: Float,
+            distanceY: Float
+        ): Boolean {
+            if (e1 != null && e2 != null) {
+                val diffX = e2.x - e1.x
+                if (Math.abs(diffX) > SWIPE_THRESHOLD && diffX > 0) {
+                    startActivity(Intent(this@PerfilActivity, CarritoActivity::class.java))
+                    overridePendingTransition(R.anim.slide_in_left, R.anim.slide_out_right)
+                    return true
+                }
+            }
+            return false
+        }
+    }
+
     private fun cerrarSesion() {
         val sharedPreferences = getSharedPreferences("userPrefs", Context.MODE_PRIVATE)
-        val editor = sharedPreferences.edit()
-        editor.apply()
+        sharedPreferences.edit().clear().apply()
 
         val intent = Intent(this, LoginActivity::class.java)
         intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
Index: app/src/main/java/com/tecsup/boticaphar/ViewPagerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tecsup.boticaphar\r\n\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.fragment.app.FragmentActivity\r\nimport androidx.viewpager2.adapter.FragmentStateAdapter\r\n\r\nclass ViewPagerAdapter(fragmentActivity: FragmentActivity) : FragmentStateAdapter(fragmentActivity) {\r\n\r\n    override fun getItemCount(): Int = 3 // Tres fragmentos\r\n\r\n    override fun createFragment(position: Int): Fragment {\r\n        return when (position) {\r\n            0 -> PerfilFragment() // Cambia por tu clase de fragmento real\r\n            1 -> HomeFragment() // Cambia por tu clase de fragmento real\r\n            2 -> CarritoFragment() // Cambia por tu clase de fragmento real\r\n            else -> HomeFragment()\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tecsup/boticaphar/ViewPagerAdapter.kt b/app/src/main/java/com/tecsup/boticaphar/ViewPagerAdapter.kt
--- a/app/src/main/java/com/tecsup/boticaphar/ViewPagerAdapter.kt	(revision 6e6c4f3271d9d180da4d5bde34d6d50ffa90a796)
+++ b/app/src/main/java/com/tecsup/boticaphar/ViewPagerAdapter.kt	(date 1730955263097)
@@ -6,13 +6,13 @@
 
 class ViewPagerAdapter(fragmentActivity: FragmentActivity) : FragmentStateAdapter(fragmentActivity) {
 
-    override fun getItemCount(): Int = 3 // Tres fragmentos
+    override fun getItemCount(): Int = 3
 
     override fun createFragment(position: Int): Fragment {
         return when (position) {
-            0 -> PerfilFragment() // Cambia por tu clase de fragmento real
-            1 -> HomeFragment() // Cambia por tu clase de fragmento real
-            2 -> CarritoFragment() // Cambia por tu clase de fragmento real
+            0 -> PerfilFragment()
+            1 -> HomeFragment()
+            2 -> CarritoFragment()
             else -> HomeFragment()
         }
     }
Index: app/src/main/java/com/tecsup/boticaphar/CarritoActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tecsup.boticaphar\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView\r\n\r\nclass CarritoActivity : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_carrito)\r\n\r\n        val bottomNavigationView = findViewById<BottomNavigationView>(R.id.bottom_navigation)\r\n\r\n        bottomNavigationView.selectedItemId = R.id.nav_cart\r\n\r\n        // Establece el listener para los ítems seleccionados\r\n        bottomNavigationView.setOnNavigationItemSelectedListener { item ->\r\n            when (item.itemId) {\r\n                R.id.nav_home -> {\r\n                    // Navegar a la actividad Home\r\n                    val intent = Intent(this, HomeActivity::class.java)\r\n                    startActivity(intent)\r\n                    true\r\n                }\r\n\r\n                R.id.nav_cart -> {\r\n                    true\r\n                }\r\n\r\n                R.id.nav_profile -> {\r\n                    // Navegar a la actividad de perfil\r\n                    val intent = Intent(this, PerfilActivity::class.java)\r\n                    startActivity(intent)\r\n                    true\r\n                }\r\n\r\n                else -> false\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tecsup/boticaphar/CarritoActivity.kt b/app/src/main/java/com/tecsup/boticaphar/CarritoActivity.kt
--- a/app/src/main/java/com/tecsup/boticaphar/CarritoActivity.kt	(revision 6e6c4f3271d9d180da4d5bde34d6d50ffa90a796)
+++ b/app/src/main/java/com/tecsup/boticaphar/CarritoActivity.kt	(date 1730955263089)
@@ -2,42 +2,69 @@
 
 import android.content.Intent
 import android.os.Bundle
+import android.view.GestureDetector
+import android.view.MotionEvent
 import androidx.appcompat.app.AppCompatActivity
+import androidx.core.view.GestureDetectorCompat
 import com.google.android.material.bottomnavigation.BottomNavigationView
 
 class CarritoActivity : AppCompatActivity() {
+
+    private lateinit var gestureDetector: GestureDetectorCompat
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_carrito)
 
+        gestureDetector = GestureDetectorCompat(this, SwipeGestureListener())
+
         val bottomNavigationView = findViewById<BottomNavigationView>(R.id.bottom_navigation)
-
         bottomNavigationView.selectedItemId = R.id.nav_cart
 
-        // Establece el listener para los ítems seleccionados
         bottomNavigationView.setOnNavigationItemSelectedListener { item ->
             when (item.itemId) {
                 R.id.nav_home -> {
-                    // Navegar a la actividad Home
-                    val intent = Intent(this, HomeActivity::class.java)
-                    startActivity(intent)
+                    startActivity(Intent(this, HomeActivity::class.java))
                     true
                 }
-
-                R.id.nav_cart -> {
-                    true
-                }
-
+                R.id.nav_cart -> true
                 R.id.nav_profile -> {
-                    // Navegar a la actividad de perfil
-                    val intent = Intent(this, PerfilActivity::class.java)
-                    startActivity(intent)
+                    startActivity(Intent(this, PerfilActivity::class.java))
                     true
                 }
-
                 else -> false
             }
         }
     }
 
+    override fun onTouchEvent(event: MotionEvent): Boolean {
+        gestureDetector.onTouchEvent(event)
+        return super.onTouchEvent(event)
+    }
+
+    inner class SwipeGestureListener : GestureDetector.SimpleOnGestureListener() {
+        private val SWIPE_THRESHOLD = 100
+
+        override fun onScroll(
+            e1: MotionEvent?,
+            e2: MotionEvent,
+            distanceX: Float,
+            distanceY: Float
+        ): Boolean {
+            if (e1 != null && e2 != null) {
+                val diffX = e2.x - e1.x
+                if (Math.abs(diffX) > SWIPE_THRESHOLD) {
+                    if (diffX > 0) {
+                        startActivity(Intent(this@CarritoActivity, HomeActivity::class.java))
+                        overridePendingTransition(R.anim.slide_in_left, R.anim.slide_out_right)
+                    } else {
+                        startActivity(Intent(this@CarritoActivity, PerfilActivity::class.java))
+                        overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left)
+                    }
+                    return true
+                }
+            }
+            return false
+        }
+    }
 }
